{"version":3,"sources":["components/Person.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","props","react_default","a","createElement","person","name","number","onClick","deletePressed","Notification","_ref","message","type","className","baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","put","concat","delete","PersonForm","onSubmit","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","Persons","persons","filter","removePerson","toLowerCase","includes","map","components_Person","key","Filter","_ref2","handleFilterChange","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","useEffect","personService","updatedPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","notification","setNotification","_useState11","_useState12","notificationType","setNotificationType","components_Notification","App_Filter","event","target","App_PersonForm","console","log","preventDefault","personObject","undefined","find","setTimeout","catch","error","window","confirm","personToBeChanged","personUpdated","objectSpread","App_Persons","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5292c54b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = props => {\r\n  return (\r\n    <p>{props.person.name}  {props.person.number} <button onClick={props.deletePressed}>delete</button> </p>\r\n  )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\r\nimport Person from './components/Person'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\n\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.onSubmit}>\r\n      <div>nimi: <input value={props.newName} onChange={props.handleNameChange} /></div>\r\n      <div>numero: <input value={props.newNumber} onChange={props.handleNumberChange} /></div>\r\n      <div><button type=\"submit\">lisää</button></div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst Persons = ({ persons, filter, removePerson }) => {\r\n\r\n  return (\r\n    <div>\r\n      {persons\r\n        .filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\r\n        .map(person =>\r\n          <Person\r\n            key={person.name}\r\n            person={person}\r\n            deletePressed={() => removePerson(person.id, person.name)}\r\n          />\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Filter = ({ filter, handleFilterChange }) =>\r\n  (<div>rajaa näytettäviä <input value={filter} onChange={handleFilterChange} /> </div>)\r\n\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(updatedPersons => {\r\n        setPersons(updatedPersons)\r\n      })\r\n  }, [])\r\n\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [notification, setNotification] = useState('')\r\n  const [notificationType, setNotificationType] = useState('')\r\n\r\n  const removePerson = (id, name) => {\r\n    console.log('pressed delete button for ', id)\r\n    if (window.confirm(`Haluatko varmasti poistaa ${name}?`)) {\r\n      personService\r\n        .remove(id)\r\n        .then(() => personService\r\n          .getAll()\r\n          .then(updatedPersons => {\r\n            setPersons(updatedPersons)\r\n          }))\r\n        .then(() => {\r\n          setNotification('Henkilö ' + name + ' poistettu onnistuneesti.')\r\n          setNotificationType('ok')\r\n          setTimeout(() => {\r\n            setNotification(null)\r\n          }, 2000)\r\n        })\r\n        .catch(error => {\r\n          console.log('delete operation failed')\r\n          setNotification('Henkilö ' + name + ' poistettu  oli jo poistettu. Päivitetään näkymä.')\r\n          setNotificationType('error')\r\n          personService\r\n            .getAll()\r\n            .then(updatedPersons => setPersons(updatedPersons))\r\n          setTimeout(() => {\r\n            setNotification(null)\r\n          }, 2000)\r\n        })\r\n    }\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    console.log('button pressed!!', event.target)\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    if (persons.find(person => person.name === newName) === undefined) {\r\n      //person with same name does not exist\r\n      personService\r\n        .create(personObject)\r\n        .then(response => {\r\n          personService\r\n            .getAll()\r\n            .then(updatedPersons => setPersons(updatedPersons))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setNotification('Henkilön ' + personObject.name + ' lisääminen onnistui.')\r\n          setNotificationType('ok')\r\n          setTimeout(() => {\r\n            setNotification(null)\r\n          }, 2000)\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response.data)\r\n          setNotification(error.response.data.error)\r\n          setNotificationType('error')\r\n          setTimeout(() => {\r\n            setNotification(null)\r\n          }, 2000)\r\n        })\r\n\r\n    }\r\n    else {\r\n      //person with same name exists\r\n      if (window.confirm(`${newName} on jo luettelossa! Korvataanko vanha numero uudella?`)) {\r\n        const personToBeChanged = persons.find(person => person.name === newName)\r\n        const personUpdated = { ...personToBeChanged, number: newNumber }\r\n\r\n        personService\r\n          .update(personToBeChanged.id, personUpdated)\r\n          .then(() => personService\r\n            .getAll()\r\n            .then(updatedPersons => {\r\n              setPersons(updatedPersons)\r\n            })\r\n            .then(() => {\r\n              setNewName('')\r\n              setNewNumber('')\r\n            })\r\n            .then(() => {\r\n              setNotification('Henkilön ' + personUpdated.name + ' muutos onnistui.')\r\n              setNotificationType('ok')\r\n              setTimeout(() => {\r\n                setNotification(null)\r\n              }, 2000)\r\n            })\r\n          )\r\n          .catch(error => {\r\n            console.log(error.response.data)\r\n            personService\r\n              .getAll()\r\n              .then(updatedPersons => setPersons(updatedPersons))\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setNotification(error.response.data.error)\r\n            setNotificationType('error')\r\n            setTimeout(() => {\r\n              setNotification(null)\r\n            }, 2000)\r\n          })\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Puhelinluettelo</h1>\r\n      <Notification message={notification} type={notificationType} />\r\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\r\n\r\n      <h2>Lisää uusi</h2>\r\n      <PersonForm handleNameChange={handleNameChange}\r\n        newName={newName}\r\n        handleNumberChange={handleNumberChange}\r\n        newNumber={newNumber}\r\n        onSubmit={addPerson}\r\n      />\r\n      <h2>Numerot</h2>\r\n      <Persons persons={persons} filter={filter} removePerson={removePerson} />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}